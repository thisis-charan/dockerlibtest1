name: Auto Update Lambda Images 

on:
  workflow_dispatch:
  push:
    branches:
     - master

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
         - aws_image: 'java11'
           local_dir: 'java/11'
        # Add or uncomment other images as necessary

    steps:
      - name: Checkout dockerlibrary
        uses: actions/checkout@v4.1.1
        with:
          path: 'dockerlibrary'
          ref: master

      - name: Create new branch with date and feature tag
        id: create_branch
        run: |
          cd dockerlibrary
          branch_name=$(date -u "+feature-${{ matrix.aws_image }}/%Y-%m-%d-%H-%M-%S")
          git checkout -b $branch_name
          echo "branch_name=$branch_name" >> $GITHUB_ENV
      
      - name: Checkout officialrepo
        uses: actions/checkout@v4.1.1
        with: 
          repository: 'aws/aws-lambda-base-images'
          path: 'officialrepo'
          ref: ${{ matrix.aws_image }}

      - name: List Directories and Output Environment Details
        run: |
          ls -all officialrepo
          ls -all officialrepo/x86_64/
          ls -all dockerlibrary/lambda/${{ matrix.local_dir }}/
          pwd
          cat /etc/os-release
      
      # Add other necessary steps here...
      
      - name: Read Pull Request Template
        id: pr_template
        run: |
          template_content=$(cat .github/pull_request_template.md)
          echo "::set-output name=body::$template_content"
      
      - name: Create Pull Request
        if: env.CHANGES_DETECTED == 'true'
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.MY_GITHUB_PAT }}
          script: |
            const title = "Update source for ${{ matrix.local_dir }} image";
            const body = `${{ steps.pr_template.outputs.body }}`;
            const head = process.env.branch_name;
            const base = 'main';
            const draft = false;
            github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              head: head,
              base: base,
              draft: draft,
            });
